#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from pervurs.includes.urls import links

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0.1'
__CHEETAH_versionTuple__ = (2, 0, 1, 'final', 0)
__CHEETAH_genTime__ = 1244608040.3999541
__CHEETAH_genTimestamp__ = 'Tue Jun  9 21:27:20 2009'
__CHEETAH_src__ = 'site.tmpl'
__CHEETAH_srcLastModified__ = 'Tue Jun  9 06:51:19 2009'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class site(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def scripts(self, **KWS):



        ## CHEETAH: generated from #block scripts at line 10, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def style(self, **KWS):



        ## CHEETAH: generated from #block style at line 13, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def top(self, **KWS):



        ## CHEETAH: generated from #block top at line 38, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        self._handleCheetahInclude("../server/www/templates/chunks/top.tmpl", trans=trans, includeFrom="file", raw=False)
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def side(self, **KWS):



        ## CHEETAH: generated from #block side at line 46, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        self._handleCheetahInclude("../server/www/templates/chunks/side.tmpl", trans=trans, includeFrom="file", raw=False)
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def body(self, **KWS):



        ## CHEETAH: generated from #block body at line 53, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>''')
        _v = VFFSL(SL,"req.settings.ref.name",True) # '$req.settings.ref.name' on line 7, col 8
        if _v is not None: write(_filter(_v, rawExpr='$req.settings.ref.name')) # from line 7, col 8.
        write('''</title>
<link href="/css/style.css" rel="stylesheet" type="text/css" />
<link href="''')
        _v = VFN(VFFSL(SL,"req.settings",True),"hostpaths",True)['stylesheet'] # "$req.settings.hostpaths['stylesheet']" on line 9, col 13
        if _v is not None: write(_filter(_v, rawExpr="$req.settings.hostpaths['stylesheet']")) # from line 9, col 13.
        write('''" rel="stylesheet" type="text/css" />
''')
        self.scripts(trans=trans)
        write('''<style>
''')
        self.style(trans=trans)
        write('''</style>
</head>

<body>

<div id="container">

<div id="wrapper"><div id="body">
    
<div id="pervurs_top">

<div id="pervurs_top_about">
the connectedism salon is an open forum built to facilitate discussion among the curious.
</div>

<div id="pervurs_top_header">
\t<h1>''')
        _v = VFFSL(SL,"req.settings.ref.name",True) # '$req.settings.ref.name' on line 31, col 6
        if _v is not None: write(_filter(_v, rawExpr='$req.settings.ref.name')) # from line 31, col 6.
        write('''</h1>
\t<div id="pervurs_top_aux">
\t\t<p><b></b><b></b><b></b><span>Thoughts Connected</span></p>
\t\t<p><b></b><b></b><b></b><span><a href="''')
        _v = VFFSL(SL,"links",True)['feed'](VFFSL(SL,"req.settings.ref",True)) # "$links['feed']($req.settings.ref)" on line 34, col 42
        if _v is not None: write(_filter(_v, rawExpr="$links['feed']($req.settings.ref)")) # from line 34, col 42.
        write('''">Subscribe</a></span></p>
\t</div>
</div>

''')
        self.top(trans=trans)
        write('''
</div>

<div id="pervurs_side">

''')
        self.side(trans=trans)
        write('''
</div>

<div id="pervurs_body">
''')
        self.body(trans=trans)
        write('''</div>

<div id="pervurs_footer">
&copy;2009 Qorporation Inc.
</div>
</div></div>

<div id="top">
\t<div id="top_wrap">
\t<div id="top_container">
\t<div id="top_stripe"><div id="top_stripe_strip"></div></div>

\t<div id="top_pod_drop">
\t\t<div id="top_pod_drop_cap_top"><div id="top_pod_drop_cap"></div></div>
\t\t<div id="top_pod_drop_wrap"><div id="top_pod_drop_body" onmouseover="podFocus();" onmouseout="podBlur();">
\t\t\t<div id="top_pod_drop_network"></div>
\t\t\t<div id="top_pod_drop_post">
\t\t\t\t<h3>Your Recent Comments <a href="javascript:qonvo.__logout();" class="logout">(Logout)</a></h3>
\t\t\t\t<div class=\'top_pod_drop_login\'>
\t\t\t\t
                <label class=\'top_pod_drop_username\'><span>Name</span><input type=\'text\' /></label>
                <label class=\'top_pod_drop_email\'><span>Email</span><input type=\'text\' /></label>
                <label class=\'top_pod_drop_website\'><span>Website</span><input type=\'text\' /></label>
                <label class=\'top_pod_drop_password\'><span>Password</span><input type=\'password\' /></label>
                <label class=\'top_pod_drop_password_confirm\'><span>Password*</span><input type=\'password\' /></label>

\t\t\t\t<div class=\'top_pod_drop_login_type\'>
\t\t\t\t<label onclick=\'podSetLoginType("login", "post")\'><input type=\'radio\' name=\'auth_post\' value=\'login\' />Login</label>
                <label onclick=\'podSetLoginType("register", "post")\'><input type=\'radio\' name=\'auth_post\' value=\'register\' />Register</label>
\t\t\t\t</div>

                <input type=\'submit\' value=\'Submit\' onclick=\'podLogin("post")\' class=\'submit\' />
\t\t\t\t
\t\t\t\t</div>
\t\t\t\t<div class=\'top_pod_drop_content\'></div>
\t\t\t</div>
\t\t\t<div id="top_pod_drop_social">
\t\t\t\t<h3>Your Recent Responders <a href="javascript:qonvo.__logout();" class="logout">(Logout)</a></h3>
\t\t\t\t<div class=\'top_pod_drop_login\'>
\t\t\t\t
                <label class=\'top_pod_drop_username\'><span>Name</span><input type=\'text\' /></label>
                <label class=\'top_pod_drop_email\'><span>Email</span><input type=\'text\' /></label>
                <label class=\'top_pod_drop_website\'><span>Website</span><input type=\'text\' /></label>
                <label class=\'top_pod_drop_password\'><span>Password</span><input type=\'password\' /></label>
                <label class=\'top_pod_drop_password_confirm\'><span>Password*</span><input type=\'password\' /></label>

\t\t\t\t<div class=\'top_pod_drop_login_type\'>
\t\t\t\t<label onclick=\'podSetLoginType("login", "social")\'><input type=\'radio\' name=\'auth_social\' value=\'login\' />Login</label>
                <label onclick=\'podSetLoginType("register", "social")\'><input type=\'radio\' name=\'auth_social\' value=\'register\' />Register</label>
\t\t\t\t</div>

                <input type=\'submit\' value=\'Submit\' onclick=\'podLogin("social")\' class=\'submit\' />
\t\t\t\t
\t\t\t\t</div>
\t\t\t\t<div class=\'top_pod_drop_content\'></div>
\t\t\t</div>
\t\t</div></div>
\t\t<div id="top_pod_drop_cap_bot"><div id="top_pod_drop_cap"></div></div>
\t</div>
\t
\t<div id="top_search_drop">
\t\t<div id="top_search_drop_cap_top"><div id="top_search_drop_cap"></div></div>
\t\t<div id="top_search_drop_wrap"><div id="top_search_drop_body" onmouseover="searchDropFocus();" onmouseout="searchDropBlur();">
\t\t\t<div id="top_search_drop_content"></div>
\t\t</div></div>
\t\t<div id="top_search_drop_cap_bot"><div id="top_search_drop_cap"></div></div>
\t</div>

\t<div id="top_pod"><div id="top_pod_body">
\t    <a href="#" id="top_logo_body" onmouseover="podDrop(\'network\');" onmouseout="podClear();"><span id="top_logo"></span></a>
\t\t<div id="top_search" onmouseout="searchDropBlur()">
\t\t\t<form method="get" action="/search">
\t    \t\t<input type="text" id="top_search_q" value="search..." name="q" onfocus="this.value = this.value == \'search...\' ? \'\' : this.value;" onkeydown="autoComplete(this.value);" onblur="searchDropClear()" />
\t\t\t</form>
\t    </div>
\t\t<div id="top_buttons">
\t    \t<a href="#" onmouseover="podDrop(\'post\');" onmouseout="podClear();" id="top_post"><span class="img"></span><span>Post</span></a>
\t        <a href="#" onmouseover="podDrop(\'social\');" onmouseout="podClear();" id="top_social"><span class="img"></span><span>Socialize</span></a>
\t    </div>
\t</div></div>
\t
\t</div>
\t</div>
</div>

</div>
<script type="text/javascript" src="/js/jquery.js"></script>
<script type="text/javascript" src="/js/pervurs.js"></script>
<script type="text/javascript" src="http://www.qonvo.com/js/qonvo.js"></script>
<script type="text/javascript">
\tfunction checkScrollbars() {
\t    if ($(\'#wrapper\').height() < $(\'#body\').height()) {
\t\t\t$(\'#top_wrap\').addClass(\'scrollbars\');
\t\t} else {
\t\t\t$(\'#top_wrap\').removeClass(\'scrollbars\');
\t\t}
\t}
\t$(window).bind(\'resize\', checkScrollbars);
\t$(document).ready(checkScrollbars);
</script>

</body>
</html>''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_site= 'respond'

## END CLASS DEFINITION

if not hasattr(site, '_initCheetahAttributes'):
    templateAPIClass = getattr(site, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(site)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=site()).run()



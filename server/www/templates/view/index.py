#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from pervurs.server.www.templates.site import site
from pervurs.includes.urls import links
from pervurs.settings import QONVO_SITE_ID

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0.1'
__CHEETAH_versionTuple__ = (2, 0, 1, 'final', 0)
__CHEETAH_genTime__ = 1244608040.5758431
__CHEETAH_genTimestamp__ = 'Tue Jun  9 21:27:20 2009'
__CHEETAH_src__ = 'view/index.tmpl'
__CHEETAH_srcLastModified__ = 'Sun Apr  5 21:03:34 2009'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class index(site):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        site.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def style(self, **KWS):



        ## CHEETAH: generated from #block style at line 5, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        _v = VFFSL(SL,"req.post.style",True) # '$req.post.style' on line 6, col 1
        if _v is not None: write(_filter(_v, rawExpr='$req.post.style')) # from line 6, col 1.
        write('''
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def body(self, **KWS):



        ## CHEETAH: generated from #block body at line 9, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
<div id="blog_post_container" class="blog_marked_''')
        _v = VFN(VFFSL(SL,"req.post.marker.lower",True),"replace",False)(' ', '_') # "$req.post.marker.lower.replace(' ', '_')" on line 11, col 50
        if _v is not None: write(_filter(_v, rawExpr="$req.post.marker.lower.replace(' ', '_')")) # from line 11, col 50.
        write('''">

\t<div id="blog_post"><div class="blog_title">
\t    <div class="blog_marker">''')
        _v = VFFSL(SL,"req.post.marker",True) # '$req.post.marker' on line 14, col 31
        if _v is not None: write(_filter(_v, rawExpr='$req.post.marker')) # from line 14, col 31.
        write('''</div>
\t\t<div class="blog_time">''')
        _v = VFN(VFFSL(SL,"req.post.posted",True),"strftime",False)("%B %d, %Y") # '$req.post.posted.strftime("%B %d, %Y")' on line 15, col 26
        if _v is not None: write(_filter(_v, rawExpr='$req.post.posted.strftime("%B %d, %Y")')) # from line 15, col 26.
        write('''</div>
\t\t<div class="blog_byline"><b>by</b><span>''')
        _v = VFFSL(SL,"req.post.user.username",True) # '$req.post.user.username' on line 16, col 43
        if _v is not None: write(_filter(_v, rawExpr='$req.post.user.username')) # from line 16, col 43.
        write('''</span></div>
\t    <h2>''')
        _v = VFFSL(SL,"req.post.title",True) # '$req.post.title' on line 17, col 10
        if _v is not None: write(_filter(_v, rawExpr='$req.post.title')) # from line 17, col 10.
        write('''</h2>
\t\t<h3>''')
        _v = VFFSL(SL,"req.post.span",True) # '$req.post.span' on line 18, col 7
        if _v is not None: write(_filter(_v, rawExpr='$req.post.span')) # from line 18, col 7.
        write('''</h3>
\t</div>
\t<div class="blog_body">''')
        _v = VFFSL(SL,"req.post.body",True) # '$req.post.body' on line 20, col 25
        if _v is not None: write(_filter(_v, rawExpr='$req.post.body')) # from line 20, col 25.
        write('''</div></div>
\t
\t<div class="tl"></div><div class="tr"></div><div class="bl"></div><div class="br"></div>
\t
</div>

<div id="blog_comments"><div id="qonvo_frame" site="''')
        _v = VFFSL(SL,"QONVO_SITE_ID",True) # '$QONVO_SITE_ID' on line 26, col 53
        if _v is not None: write(_filter(_v, rawExpr='$QONVO_SITE_ID')) # from line 26, col 53.
        write('''" ident="''')
        _v = VFFSL(SL,"req.post.id",True) # '$req.post.id' on line 26, col 76
        if _v is not None: write(_filter(_v, rawExpr='$req.post.id')) # from line 26, col 76.
        write('''"></div></div>

''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write('''
''')
        self.style(trans=trans)
        write('''
''')
        self.body(trans=trans)
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_index= 'writeBody'

## END CLASS DEFINITION

if not hasattr(index, '_initCheetahAttributes'):
    templateAPIClass = getattr(index, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(index)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=index()).run()


